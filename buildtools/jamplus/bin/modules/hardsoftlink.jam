if ! $(TARGETINFO_LOCATE) {

rule HardLink PARENT : TARGET : SOURCE
{
	PARENT = [ _retrieveActiveTargetName $(PARENT) ] ;
	local grist = $(PARENT) ;
	SOURCE = $(SOURCE:g=$(grist)) ;
	TARGET = $(TARGET:g=$(grist)) ;
	MakeLocate $(TARGET) : $(TARGET:D) ;
	BINDING on $(TARGET) = $(TARGET:BS) ;

	Depends $(PARENT) : $(TARGET) : $(SOURCE) ;
	SearchSource $(SOURCE) : $(SEARCH_SOURCE) ;

	_HardLink $(TARGET) : $(SOURCE) ;
}

actions _HardLink
{
	$(RM) "$(1[1])" && $(LN) "$(2[1])" "$(1[1])"
}





rule SoftLink PARENT : TARGET : SOURCE : SOFTLINK_SOURCE_RELATIVE_PATH
{
	PARENT = [ _retrieveActiveTargetName $(PARENT) ] ;
	local grist = $(PARENT) ;
	if ! $(SOURCE:G) {
		SOURCE = $(SOURCE:G=$(grist)) ;
	}
	if ! $(TARGET:G) {
		TARGET = $(TARGET:G=$(grist)) ;
	}
	on $(TARGET) {
		if ! $(LOCATE) {
			MakeLocate $(TARGET) : $(TARGET:D) ;
		}
		if ! $(BINDING) {
			BINDING on $(TARGET) = $(TARGET:BS) ;
		}
	}
	
	Depends $(PARENT) : $(TARGET) : $(SOURCE) ;
	SearchSource $(SOURCE) : $(SEARCH_SOURCE) ;

	SOFTLINK_SOURCE_RELATIVE_PATH on $(TARGET) = $(SOFTLINK_SOURCE_RELATIVE_PATH[1]:E=$(TARGET:T)) ;
	
	Clean clean:$(PARENT) : $(TARGET) ;

	_SoftLink $(TARGET) : $(SOURCE) ;
}

actions _SoftLink
{
	$(RM) $(1) && $(LN) -s $(SOFTLINK_SOURCE_RELATIVE_PATH:C) $(1[1]:C)
}


} else {

rule HardLink
{
}

rule SoftLink
{
}

}
