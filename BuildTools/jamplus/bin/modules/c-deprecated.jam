rule HdrRule SOURCE : HEADERS
{
	C.HdrRule $(SOURCE) : $(HEADERS) ;
}


rule SubDirCcFlags
{
	C.SubDirCcFlags $(<) ;
}


rule SubDirC++Flags
{
	C.SubDirC++Flags $(<) ;
}


rule SubDirHdrs
{
	C.SubDirHdrs $(<) ;
}


rule BatchCompileGroupSize TARGET : SIZE
{
	C.BatchCompileGroupSize $(TARGET) : $(SIZE) ;
}


rule CompileOptions OPTIONS
{
	C.CompileOptions $(OPTIONS) ;
}


rule Lump PARENT : SOURCES_VARIABLE_NAME : LUMP_NAME : PCH_HEADER :
		PCH_HEADER_FILENAME : LUMP_EXT : EXTRA_INCLUDE_PATHS
{
	C.Lump $(PARENT) : $(SOURCES_VARIABLE_NAME) : $(LUMP_NAME) : $(PCH_HEADER) :
			$(PCH_HEADER_FILENAME) : $(LUMP_EXT) : $(EXTRA_INCLUDE_PATHS) ;
}


rule Application TARGET : SOURCES : OPTIONS
{
	C.Application $(TARGET) : $(SOURCES) : $(OPTIONS) ;
}


rule Library TARGET : SOURCES : OPTIONS
{
	C.Library $(TARGET) : $(SOURCES) : $(OPTIONS) ;
}


rule CreatePrecompiledHeader TARGET : NAME : HEADER
{
	C.CreatePrecompiledHeader $(TARGET) : $(NAME) : $(HEADER) ;
}


rule UsePrecompiledHeader TARGET : NAME : HEADER : FILES
{
	C.UsePrecompiledHeader $(TARGET) : $(NAME) : $(HEADER) : $(FILES) ;
}


rule PrecompiledHeader TARGET : NAME : FILES
{
	C.PrecompiledHeader $(TARGET) : $(NAME) : $(FILES) ;
}


rule NoPrecompiledHeader TARGET : FILES
{
	C.NoPrecompiledHeader $(TARGET) : $(FILES) ;
}


rule CFlags TARGET : FLAGS : THE_CONFIG : THE_PLATFORM
{
	C.CFlags $(TARGET) : $(FLAGS) : $(THE_CONFIG) : $(THE_PLATFORM) ;
}


rule C++Flags TARGET : FLAGS : THE_CONFIG : THE_PLATFORM
{
	C.C++Flags $(TARGET) : $(FLAGS) : $(THE_CONFIG) : $(THE_PLATFORM) ;
}


rule AddFlags TARGET : FLAGS : THE_CONFIG : THE_PLATFORM
{
	C.AddFlags $(TARGET) : $(FLAGS) : $(THE_CONFIG) : $(THE_PLATFORM) ;
}


rule RemoveFlags TARGET : FLAGS : THE_CONFIG : THE_PLATFORM
{
	C.RemoveFlags $(TARGET) : $(FLAGS) : $(THE_CONFIG) : $(THE_PLATFORM) ;
}


rule Defines TARGET : DEFINES : THE_CONFIG : THE_PLATFORM
{
	C.Defines $(TARGET) : $(DEFINES) : $(THE_CONFIG) : $(THE_PLATFORM) ;
}


rule ExcludeFromBuild TARGET : SOURCES
{
	C.ExcludeFromBuild $(TARGET) : $(SOURCES) ;
}


rule ForceInclude TARGET : INCLUDES : THE_CONFIG : THE_PLATFORM
{
	C.ForceInclude $(TARGET) : $(INCLUDES) : $(THE_CONFIG) : $(THE_PLATFORM) ;
}


rule IncludeDirectories TARGET : INCLUDEPATHS : THE_CONFIG : THE_PLATFORM
{
	C.IncludeDirectories $(TARGET) : $(INCLUDEPATHS) : $(THE_CONFIG) : $(THE_PLATFORM) ;
}


rule InstallNamePath TARGET : INSTALL_NAME_PATH : THE_CONFIG : THE_PLATFORM
{
	C.InstallNamePath $(TARGET) : $(INSTALL_NAME_PATH) : $(THE_CONFIG) : $(THE_PLATFORM) ;
}


rule LinkDirectories TARGET : DIRECTORIES : THE_CONFIG : THE_PLATFORM
{
	C.LinkDirectories $(TARGET) : $(DIRECTORIES) : $(THE_CONFIG) : $(THE_PLATFORM) ;
}


rule LinkFlags TARGET : FLAGS : THE_CONFIG : THE_PLATFORM
{
	C.LinkFlags $(TARGET) : $(FLAGS) : $(THE_CONFIG) : $(THE_PLATFORM) ;
}


rule LinkLibraries TARGET : LIBRARIES : THE_CONFIG : THE_PLATFORM
{
	C.LinkLibraries $(TARGET) : $(LIBRARIES) : $(THE_CONFIG) : $(THE_PLATFORM) ;
}


rule LinkPrebuiltLibraries TARGET : LIBRARIES : THE_CONFIG : THE_PLATFORM
{
	C.LinkPrebuiltLibraries $(TARGET) : $(LIBRARIES) : $(THE_CONFIG) : $(THE_PLATFORM) ;
}


rule ObjectCFlags TARGET : SOURCES : FLAGS : THE_CONFIG : THE_PLATFORM
{
	C.ObjectCFlags $(TARGET) : $(SOURCES) : $(FLAGS) : $(THE_CONFIG) : $(THE_PLATFORM) ;
}


rule ObjectC++Flags TARGET : SOURCES : FLAGS : THE_CONFIG : THE_PLATFORM
{
	C.ObjectC++Flags $(TARGET) : $(SOURCES) : $(FLAGS) : $(THE_CONFIG) : $(THE_PLATFORM) ;
}


rule ObjectDefines TARGET : SOURCES : DEFINES : THE_CONFIG : THE_PLATFORM
{
	C.ObjectDefines $(TARGET) : $(SOURCES) : $(DEFINES) : $(THE_CONFIG) : $(THE_PLATFORM) ;
}


rule ObjectForceInclude TARGET : SOURCES : INCLUDES : THE_CONFIG : THE_PLATFORM
{
	C.ObjectForceInclude $(TARGET) : $(SOURCES) : $(INCLUDES) : $(THE_CONFIG) : $(THE_PLATFORM) ;
}


rule ObjectIncludeDirectories TARGET : SOURCES : INCLUDEPATHS : THE_CONFIG : THE_PLATFORM
{
	C.ObjectIncludeDirectories $(TARGET) : $(SOURCES) : $(INCLUDEPATHS) : $(THE_CONFIG) : $(THE_PLATFORM) ;
}


rule OutputName TARGET : NAME : THE_CONFIG : THE_PLATFORM
{
	C.OutputName $(TARGET) : $(NAME) : $(THE_CONFIG) : $(THE_PLATFORM) ;
}


rule OutputPath TARGET : OUTPUTPATH : THE_CONFIG : THE_PLATFORM
{
	C.OutputPath $(TARGET) : $(OUTPUTPATH) : $(THE_CONFIG) : $(THE_PLATFORM) ;
}


rule OutputPostfix TARGET : POSTFIX : THE_CONFIG : THE_PLATFORM
{
	C.OutputPostfix $(TARGET) : $(POSTFIX) : $(THE_CONFIG) : $(THE_PLATFORM) ;
}


rule OutputPostfixClear TARGET : THE_CONFIG : THE_PLATFORM
{
	C.OutputPostfixClear $(TARGET) : $(THE_CONFIG) : $(THE_PLATFORM) ;
}


rule OutputSuffix TARGET : SUFFIX : THE_CONFIG : THE_PLATFORM
{
	C.OutputSuffix $(TARGET) : $(SUFFIX) : $(THE_CONFIG) : $(THE_PLATFORM) ;
}


# Visual C++
rule DefFile TARGET : SOURCES
{
	C.DefFile $(TARGET) : $(SOURCES) ;
}
